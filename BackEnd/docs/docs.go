// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/authorization": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "pingpong example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "创建车辆",
                "parameters": [
                    {
                        "description": "车辆信息",
                        "name": "carInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.AddCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/index": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "登陆",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "登陆",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.loginRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/create": {
            "post": {
                "description": "创建管理员",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "创建管理员",
                "parameters": [
                    {
                        "description": "Manager",
                        "name": "manager",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Manager.createManagerRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manager created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/login": {
            "post": {
                "description": "管理员登陆",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "管理员登陆",
                "parameters": [
                    {
                        "description": "Manager",
                        "name": "manager",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Manager.loginRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create a spot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spots"
                ],
                "summary": "Create a spot",
                "parameters": [
                    {
                        "description": "spot info",
                        "name": "spot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Spots.CreateSpotRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\", \"Add spot successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\", \"unable to add spot\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/delete/{id}": {
            "put": {
                "description": "delete a spot by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Delete a spot(soft delete)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/list": {
            "get": {
                "description": "获取车位列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spots"
                ],
                "summary": "获取车位列表",
                "responses": {
                    "200": {
                        "description": "Spot list",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Cannot get spot list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/modifySpotInfo/{spotId}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "修改车位信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spots"
                ],
                "summary": "修改车位信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Spot information",
                        "name": "spot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Spots.CreateSpotRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spot information updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Data binding error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "SQL error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/ownedCar/choseSize/{plateNumber}": {
            "get": {
                "description": "chose size with my car, 默认用的是longsizhuo数据库的第18号用户的ID做测试",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Chose size with user's car plate number,param is plate number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plate Number",
                        "name": "plateNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "spots\", \"list of spots\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\", \"unable to get spot list\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/ownedList/{ownerId}": {
            "get": {
                "description": "show all owned spots by User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Show all owned spots",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Owner ID",
                        "name": "ownerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "spots\", \"list of spots\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\", \"unable to get spot list\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/update": {
            "put": {
                "description": "update a spot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Update a spot",
                "parameters": [
                    {
                        "description": "spot info",
                        "name": "spot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Spot.Basic"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\", \"Update spot successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\", \"unable to update spot\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/update/spotPrice": {
            "put": {
                "description": "update a spot's price, got four query parameters by order: spotID, perDay, perNight, perMonth 。默认用的是longsizhuo数据库的第18号用户的ID做测试",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Update a spot's price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Price per day",
                        "name": "perDay",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Price per night",
                        "name": "perNight",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Price per month",
                        "name": "perMonth",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\", \"Update spot price successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\", \"unable to update spot price\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/{spotId}": {
            "get": {
                "description": "获取车位详情",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spots"
                ],
                "summary": "获取车位详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spot details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Cannot get spot details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "do ping",
                "tags": [
                    "User"
                ],
                "summary": "创建用户",
                "parameters": [
                    {
                        "description": "用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create/sendEmail": {
            "post": {
                "description": "发送验证码到指定邮箱，并存储验证码到Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Send code",
                "parameters": [
                    {
                        "format": "emailconfigs",
                        "description": "Recipient emailconfigs address",
                        "name": "emailconfigs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/create/verifyEmail": {
            "post": {
                "description": "Verify the code/",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Verify code",
                "parameters": [
                    {
                        "description": "email and code",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.CodeStructData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    },
                    "400": {
                        "description": "unmarshal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "获取用户信息。如果未提供email查询参数，则返回当前用户的信息。如果提供了email查询参数，只有管理员可以查询其他用户的信息。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "要查询的用户邮箱",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功获取管理员信息",
                        "schema": {
                            "$ref": "#/definitions/Manager.AdminInfo"
                        }
                    },
                    "400": {
                        "description": "错误的请求"
                    },
                    "401": {
                        "description": "未授权或无权限"
                    },
                    "500": {
                        "description": "内部服务器错误"
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "获取用户列表",
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/modifyPasswd": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "修改密码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "修改密码",
                "parameters": [
                    {
                        "description": "User Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.modifyPasswordData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/modifyUserInfo": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "修改用户信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "修改用户信息",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.ModifyUserInfoData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/topUp": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "充值",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "充值",
                "parameters": [
                    {
                        "description": "充值金额",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.TopUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/withdraw": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "提现",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "提现",
                "parameters": [
                    {
                        "description": "提现金额",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.TopUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Manager.AdminInfo": {
            "type": "object",
            "properties": {
                "adminID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "Manager.createManagerRequestData": {
            "type": "object",
            "required": [
                "adminID",
                "name"
            ],
            "properties": {
                "adminID": {
                    "type": "string",
                    "example": "123456"
                },
                "name": {
                    "type": "string",
                    "example": "longsizhuo"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "phone": {
                    "type": "string",
                    "example": "123456"
                },
                "repassword": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "Manager.loginRequestData": {
            "type": "object",
            "required": [
                "adminID"
            ],
            "properties": {
                "adminID": {
                    "type": "string",
                    "example": "longsizhuoIsTheBest"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "Spot.Basic": {
            "type": "object"
        },
        "Spots.CreateSpotRequestData": {
            "type": "object",
            "properties": {
                "availableTime": {
                    "type": "string"
                },
                "charge": {
                    "type": "string"
                },
                "isDayRent": {
                    "type": "boolean"
                },
                "isOurRent": {
                    "type": "boolean"
                },
                "isWeekRent": {
                    "type": "boolean"
                },
                "morePictures": {
                    "type": "string"
                },
                "orderNum": {
                    "type": "integer"
                },
                "passWay": {
                    "type": "string"
                },
                "pictures": {
                    "type": "string"
                },
                "pricePerDay": {
                    "type": "number"
                },
                "pricePerHour": {
                    "type": "number"
                },
                "pricePerWeek": {
                    "type": "number"
                },
                "size": {
                    "type": "string"
                },
                "spotAddr": {
                    "type": "string"
                },
                "spotName": {
                    "type": "string"
                },
                "spotType": {
                    "type": "string"
                }
            }
        },
        "User.AddCreationRequest": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "example": "brand"
                },
                "charge": {
                    "type": "string",
                    "example": "charge"
                },
                "picture": {
                    "type": "string",
                    "example": "picture"
                },
                "plate": {
                    "type": "string",
                    "example": "plate"
                },
                "size": {
                    "type": "string",
                    "example": "size"
                },
                "type": {
                    "type": "string",
                    "example": "type"
                }
            }
        },
        "User.CodeStructData": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code 验证码",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "User.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone",
                "rePassword"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "dateBirth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "rePassword": {
                    "type": "string"
                }
            }
        },
        "User.InfoDetail": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "account": {
                    "type": "number",
                    "example": 0
                },
                "addr": {
                    "type": "string",
                    "example": ""
                },
                "avatar": {
                    "type": "string",
                    "example": "avata"
                },
                "carInfo": {
                    "type": "string",
                    "example": "{}"
                },
                "createTime": {
                    "type": "string",
                    "example": "2021-07-01 00:00:00"
                },
                "dateBirth": {
                    "type": "string",
                    "example": "25/02/1999"
                },
                "deleteTime": {
                    "type": "string",
                    "example": "2021-07-01 00:00:00"
                },
                "earning": {
                    "type": "number",
                    "example": 0
                },
                "email": {
                    "type": "string",
                    "example": "longsizhuo@gmail.com"
                },
                "leasedSpot": {
                    "type": "string",
                    "example": "{}"
                },
                "name": {
                    "type": "string",
                    "example": "longsizhuo"
                },
                "ownedSpot": {
                    "type": "string",
                    "example": "{}"
                },
                "phone": {
                    "type": "string",
                    "example": "123456"
                },
                "topUp": {
                    "type": "number",
                    "example": 0
                }
            }
        },
        "User.ModifyUserInfoData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "address"
                },
                "avata": {
                    "type": "string",
                    "example": "avata"
                },
                "dateBirth": {
                    "type": "string",
                    "example": "25/02/1999"
                },
                "email": {
                    "description": "Email 不能被修改，不能在这里修改，是主键",
                    "type": "string",
                    "example": "longsizhuo@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "longsizhuo"
                },
                "phone": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "User.RequestData": {
            "type": "object",
            "required": [
                "to"
            ],
            "properties": {
                "to": {
                    "type": "string",
                    "format": "emailconfigs",
                    "example": "longsizhuo@gmail.com"
                }
            }
        },
        "User.TopUpRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                }
            }
        },
        "User.loginRequestData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "longsizhuo@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "User.modifyPasswordData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "longsizhuo@gmail.com"
                },
                "password": {
                    "type": "string"
                },
                "repassword": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
