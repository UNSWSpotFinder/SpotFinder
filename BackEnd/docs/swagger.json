{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/index": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/create": {
            "post": {
                "description": "create a spot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Create a spot",
                "parameters": [
                    {
                        "description": "spot info",
                        "name": "spot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Spots.CreateSpotSimple"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\", \"Add spot successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\", \"unable to add spot\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/delete/{id}": {
            "put": {
                "description": "delete a spot by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Delete a spot(soft delete)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/list/{page}/{pageSize}": {
            "get": {
                "description": "get list of all spots(PageQuery)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Get the list of spots",
                "responses": {
                    "200": {
                        "description": "message: list of spots",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error: Cannot get spot list",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/spot/update": {
            "put": {
                "description": "update a spot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spots"
                ],
                "summary": "Update a spot",
                "parameters": [
                    {
                        "description": "spot info",
                        "name": "spot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Spot.Basic"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\", \"Update spot successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\", \"unable to update spot\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "do ping",
                "tags": [
                    "User"
                ],
                "summary": "创建用户",
                "parameters": [
                    {
                        "description": "用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create/sendEmail": {
            "post": {
                "description": "发送验证码到指定邮箱，并存储验证码到Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Send code",
                "parameters": [
                    {
                        "format": "emailconfigs",
                        "description": "Recipient emailconfigs address",
                        "name": "emailconfigs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "获取用户列表",
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/verify": {
            "post": {
                "description": "Verify the code/",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Verify code",
                "parameters": [
                    {
                        "format": "emailconfigs",
                        "description": "Recipient emailconfigs address",
                        "name": "emailconfigs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.CodeStructData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    },
                    "400": {
                        "description": "unmarshal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Spot.Basic": {
            "type": "object"
        },
        "Spots.CreateSpotSimple": {
            "type": "object",
            "required": [
                "isOccupy",
                "isVisible",
                "ownerId",
                "size",
                "spotAddr",
                "spotName",
                "spotType"
            ],
            "properties": {
                "deletedAt": {
                    "type": "string"
                },
                "isOccupy": {
                    "description": "将字段名更改为驼峰式并匹配JSON键",
                    "type": "boolean"
                },
                "isVisible": {
                    "description": "同上",
                    "type": "boolean"
                },
                "ownerId": {
                    "description": "使用uint64匹配原始JSON中的bigint，并修改字段名以匹配JSON键",
                    "type": "integer"
                },
                "pictures": {
                    "description": "照片应为字符串切片，omitempty表明非必需字段",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pricePerDay": {
                    "type": "number"
                },
                "pricePerMonth": {
                    "type": "number"
                },
                "pricePerWeek": {
                    "type": "number"
                },
                "rate": {
                    "description": "保留float64类型，omitempty表明非必需字段",
                    "type": "number"
                },
                "size": {
                    "type": "string"
                },
                "spotAddr": {
                    "type": "string"
                },
                "spotName": {
                    "type": "string"
                },
                "spotType": {
                    "type": "string"
                }
            }
        },
        "User.CodeStructData": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code 验证码",
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "User.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone",
                "rePassword"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "rePassword": {
                    "type": "string"
                }
            }
        },
        "User.RequestData": {
            "type": "object",
            "required": [
                "to"
            ],
            "properties": {
                "to": {
                    "type": "string",
                    "format": "emailconfigs",
                    "example": "longsizhuo@gmail.com"
                }
            }
        }
    }
}