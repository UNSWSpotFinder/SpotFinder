{
    "swagger": "2.0",
    "info": {
        "description": "This is a server for SpotFinder, a project for 9900H14A. Maybe it could be a good memory.",
        "title": "SpotFinder",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Sizhuo Long",
            "url": "https://www.github.com/longsizhuo",
            "email": "longsizhuo@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/authorization": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "pingpong example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "创建车辆",
                "parameters": [
                    {
                        "description": "车辆信息",
                        "name": "carInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateCarRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car/deleteCar/{carID}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "删除车辆",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "删除车辆",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CarID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "SQL error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car/getCar/{carID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "通过车辆ID获取车辆",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "获取车辆",
                "parameters": [
                    {
                        "type": "string",
                        "description": "车辆ID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car\", \"car\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car/getMyCar": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "从car的表中获取用户的车辆，而不是从user的表中获取",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "获取用户的车辆",
                "responses": {
                    "200": {
                        "description": "cars\", \"cars\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car/modifyCarInfo/{carID}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "修改车辆信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "修改车辆信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CarID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "车辆信息",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateCarRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle information updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Data binding error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "SQL error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/index": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "登陆",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "登陆",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.loginRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/approve/{spotId}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "审核车位，用的是URL参数，一次只能查询一辆哦",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "审核车位",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spot approved",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Cannot approve spot",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/block/{spotId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "审核车位，用的是URL参数，一次只能查询一辆哦",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "把车位ban掉",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spot approved",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Cannot approve spot",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/create": {
            "post": {
                "description": "创建管理员",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "创建管理员",
                "parameters": [
                    {
                        "description": "Manager",
                        "name": "manager",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Manager.createManagerRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manager created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/invisible/{spotId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "审核车位，用的是URL参数，一次只能查询一辆哦",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "隐藏车位",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spot approved",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Cannot approve spot",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/login": {
            "post": {
                "description": "管理员登陆",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "管理员登陆",
                "parameters": [
                    {
                        "description": "Manager",
                        "name": "manager",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Manager.loginRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/managers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the total number of managers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Get the total number of managers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to calculate total managers",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the total number of orders, with optional filtering based on status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Get the total number of orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter orders by status (Pending, Completed, Cancelled, Refund)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to calculate total orders",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/populate-daily-costs": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "collect daily costs from order_basics table and populate them into daily_order_costs table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "!!!DO NOT USE THIS API DIRECTLY!!!",
                "responses": {
                    "200": {
                        "description": "Daily order costs populated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to calculate daily order costs",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/report": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "获取举报信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "获取举报信息",
                "responses": {
                    "200": {
                        "description": "Report info",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to get report info",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/report/solve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "根据举报结果禁用相关的车位或标记报告为已解决。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "处理举报",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Report ID",
                        "name": "report_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Result should be either 'success' or 'failure'",
                        "name": "result",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report processed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid report ID or result parameter",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/spots": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the total number of spots, with optional filtering based on visibility and block status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Get the total number of spots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter spots by visibility",
                        "name": "is_visible",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter spots by block status",
                        "name": "is_blocked",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to calculate total spots",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/statistics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the total cost and daily cost of orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Get the total cost and daily cost of orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to calculate total cost",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/unblock/{spotId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "审核车位，用的是URL参数，一次只能查询一辆哦",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "把车位unban掉",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spot approved",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Cannot approve spot",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manager/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the total number of users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Get the total number of users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to calculate total users",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{orderID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "获取订单信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "获取订单信息",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order info",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to get order info",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{orderID}/cancel": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "客户取消订单，执行软删除",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "取消订单",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order canceled successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to cancel order",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{orderID}/refund": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "退款订单",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "退款订单",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order refunded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to refund order",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{orderID}/reviews": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Create a review",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Review",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Review.reviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Order not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to create review",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reviews/{reviewID}": {
            "get": {
                "description": "获取单个评论的详情",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "获取单个评论的详情",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "reviewID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review fetched successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to fetch review",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create a spot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spots"
                ],
                "summary": "Create a spot",
                "parameters": [
                    {
                        "description": "spot info",
                        "name": "spot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Spots.CreateSpotRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\", \"Add spot successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\", \"unable to add spot\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/list": {
            "get": {
                "description": "获取车位列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spots"
                ],
                "summary": "获取车位列表",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Is the spot visible",
                        "name": "isVisible",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 15,
                        "description": "Number of spots per page for pagination",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An example of a successful response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Cannot get spot list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/modifySpotInfo/{spotId}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "修改车位信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spots"
                ],
                "summary": "修改车位信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Spot information",
                        "name": "spot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Spots.CreateSpotRequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spot information updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Data binding error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "SQL error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spot/{spotId}": {
            "get": {
                "description": "获取车位详情",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spots"
                ],
                "summary": "获取车位详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spot ID",
                        "name": "spotId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spot details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Cannot get spot details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spots/{spotID}/orders": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "创建订单",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "创建订单",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spot ID",
                        "name": "spotID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "unable to create order",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spots/{spotID}/report": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "创建举报",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "创建举报",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spot ID",
                        "name": "spotID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "unable to create report",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spots/{spotID}/reviews": {
            "get": {
                "description": "获取车位ID对应的评论",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "获取车位ID对应的评论",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spot ID",
                        "name": "spotID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reviews fetched successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to fetch reviews",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "do ping",
                "tags": [
                    "User"
                ],
                "summary": "创建用户",
                "parameters": [
                    {
                        "description": "用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create/sendEmail": {
            "post": {
                "description": "发送验证码到指定邮箱，并存储验证码到Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Send code",
                "parameters": [
                    {
                        "description": "Recipient email configs address",
                        "name": "emailconfigs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/create/verifyEmail": {
            "post": {
                "description": "Verify the code/",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Verify code",
                "parameters": [
                    {
                        "description": "email and code",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.CodeStructData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User.RequestData"
                        }
                    },
                    "400": {
                        "description": "unmarshal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "获取用户信息。如果未提供email查询参数，则返回当前用户的信息。如果提供了email查询参数，只有管理员可以查询其他用户的信息。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "要查询的用户邮箱",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功获取管理员信息",
                        "schema": {
                            "$ref": "#/definitions/Manager.AdminInfo"
                        }
                    },
                    "400": {
                        "description": "错误的请求"
                    },
                    "401": {
                        "description": "未授权或无权限"
                    },
                    "500": {
                        "description": "内部服务器错误"
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "获取用户列表",
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/modifyPasswd": {
            "post": {
                "description": "修改密码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "修改密码",
                "parameters": [
                    {
                        "description": "User Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.modifyPasswordData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/modifyUserInfo": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "修改用户信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "修改用户信息",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.ModifyUserInfoData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/orders/asOwner": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "获取指定车位主的所有订单",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "获取车位主所有订单",
                "responses": {
                    "200": {
                        "description": "Orders",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No orders found for the owner",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/orders/asUser": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "获取用户所有订单",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "获取用户所有订单",
                "responses": {
                    "200": {
                        "description": "Orders",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to get orders",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/simpleInfo/{id}": {
            "get": {
                "description": "获取用户简单信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "获取用户简单信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/topUp": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "充值",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "充值",
                "parameters": [
                    {
                        "description": "充值金额",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.TopUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/withdraw": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "提现",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "提现",
                "parameters": [
                    {
                        "description": "提现金额",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.TopUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vouchers/generate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "GenerateAndInsertVouchers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher"
                ],
                "summary": "GenerateAndInsertVouchers",
                "responses": {
                    "200": {
                        "description": "Vouchers generated and inserted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to generate and insert vouchers",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vouchers/info/{code}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information of a voucher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher"
                ],
                "summary": "Get information of a voucher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Voucher code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the value and used status of the voucher",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vouchers/random": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "从数据库中随机选择一个未发放且未使用的优惠券",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher"
                ],
                "summary": "随机返回一个未发放且未使用的优惠券",
                "responses": {
                    "200": {
                        "description": "Return a voucher",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No available voucher found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vouchers/use/{code}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "使用优惠券",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Voucher"
                ],
                "summary": "使用优惠券",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Voucher code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voucher used successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Voucher has been used",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upgrades the HTTP connection to a WebSocket connection to handle real-time communication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "websocket"
                ],
                "summary": "WebSocket communication endpoint",
                "parameters": [
                    {
                        "description": "WebSocket message",
                        "name": "WSMessage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Message.WSMessage"
                        }
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Upgraded to WebSocket protocol.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request, cannot upgrade to WebSocket.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Manager.AdminInfo": {
            "type": "object",
            "properties": {
                "adminID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "Manager.createManagerRequestData": {
            "type": "object",
            "required": [
                "adminID",
                "name"
            ],
            "properties": {
                "adminID": {
                    "type": "string",
                    "example": "123456"
                },
                "name": {
                    "type": "string",
                    "example": "longsizhuo"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "phone": {
                    "type": "string",
                    "example": "123456"
                },
                "repassword": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "Manager.loginRequestData": {
            "type": "object",
            "required": [
                "adminID"
            ],
            "properties": {
                "adminID": {
                    "type": "string",
                    "example": "longsizhuoIsTheBest"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "Message.WSMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "receiverId": {
                    "type": "integer"
                },
                "type": {
                    "description": "\"message\" 或 \"notification\"",
                    "type": "string"
                }
            }
        },
        "Models.TimeRange": {
            "type": "object",
            "required": [
                "Tid",
                "distance",
                "endDate",
                "startDate"
            ],
            "properties": {
                "Tid": {
                    "type": "string",
                    "example": "1712312421231"
                },
                "distance": {
                    "description": "Distance 时间差",
                    "type": "string",
                    "example": "28"
                },
                "endDate": {
                    "type": "string",
                    "example": "2024-04-02T15:00:00.000Z"
                },
                "startDate": {
                    "type": "string",
                    "example": "2024-04-02T13:00:00.000Z"
                }
            }
        },
        "Order.CreateRequest": {
            "type": "object",
            "required": [
                "bookingTime",
                "carID",
                "cost"
            ],
            "properties": {
                "bookingTime": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Models.TimeRange"
                    }
                },
                "carID": {
                    "type": "integer"
                },
                "cost": {
                    "type": "number"
                }
            }
        },
        "Review.reviewRequest": {
            "type": "object",
            "required": [
                "content",
                "rating"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                }
            }
        },
        "Spots.CreateSpotRequestData": {
            "type": "object",
            "properties": {
                "availableTime": {
                    "type": "string"
                },
                "charge": {
                    "type": "string"
                },
                "isDayRent": {
                    "type": "boolean"
                },
                "isOurRent": {
                    "type": "boolean"
                },
                "isWeekRent": {
                    "type": "boolean"
                },
                "morePictures": {
                    "type": "string"
                },
                "orderNum": {
                    "type": "integer"
                },
                "passWay": {
                    "type": "string"
                },
                "pictures": {
                    "type": "string"
                },
                "pricePerDay": {
                    "type": "number"
                },
                "pricePerHour": {
                    "type": "number"
                },
                "pricePerWeek": {
                    "type": "number"
                },
                "size": {
                    "type": "string"
                },
                "spotAddr": {
                    "type": "string"
                },
                "spotName": {
                    "type": "string"
                },
                "spotType": {
                    "type": "string"
                }
            }
        },
        "User.CodeStructData": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code 验证码",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "User.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone",
                "rePassword"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "dateBirth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "rePassword": {
                    "type": "string"
                }
            }
        },
        "User.InfoDetail": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "account": {
                    "type": "number",
                    "example": 0
                },
                "addr": {
                    "type": "string",
                    "example": ""
                },
                "avatar": {
                    "type": "string",
                    "example": "avata"
                },
                "carInfo": {
                    "type": "string",
                    "example": "{}"
                },
                "createTime": {
                    "type": "string",
                    "example": "2021-07-01 00:00:00"
                },
                "dateBirth": {
                    "type": "string",
                    "example": "25/02/1999"
                },
                "deleteTime": {
                    "type": "string",
                    "example": "2021-07-01 00:00:00"
                },
                "earning": {
                    "type": "number",
                    "example": 0
                },
                "email": {
                    "type": "string",
                    "example": "longsizhuo@gmail.com"
                },
                "leasedSpot": {
                    "type": "string",
                    "example": "{}"
                },
                "name": {
                    "type": "string",
                    "example": "longsizhuo"
                },
                "ownedSpot": {
                    "type": "string",
                    "example": "{}"
                },
                "phone": {
                    "type": "string",
                    "example": "123456"
                },
                "topUp": {
                    "type": "number",
                    "example": 0
                }
            }
        },
        "User.ModifyUserInfoData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "address"
                },
                "avata": {
                    "type": "string",
                    "example": "avata"
                },
                "dateBirth": {
                    "type": "string",
                    "example": "25/02/1999"
                },
                "email": {
                    "description": "Email 不能被修改，不能在这里修改，是主键",
                    "type": "string",
                    "example": "longsizhuo@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "longsizhuo"
                },
                "phone": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "User.RequestData": {
            "type": "object",
            "required": [
                "to"
            ],
            "properties": {
                "to": {
                    "type": "string",
                    "format": "emailconfigs",
                    "example": "longsizhuo@gmail.com"
                }
            }
        },
        "User.TopUpRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                }
            }
        },
        "User.loginRequestData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "longsizhuo@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "User.modifyPasswordData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "longsizhuo@gmail.com"
                },
                "password": {
                    "type": "string"
                },
                "repassword": {
                    "type": "string"
                }
            }
        },
        "controller.CreateCarRequestData": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "example": "Toyota"
                },
                "charge": {
                    "type": "string",
                    "example": "No"
                },
                "picture": {
                    "type": "string",
                    "example": "Please use https://tool.jisuapi.com/pic2base64.html to convert the picture to base64 and then paste it here"
                },
                "plate": {
                    "type": "string",
                    "example": "NSW123456"
                },
                "size": {
                    "type": "string",
                    "example": "medium"
                },
                "type": {
                    "type": "string",
                    "example": "Bike"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}